{"version":3,"sources":["../node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","../node_modules/@babel/runtime/helpers/esm/createClass.js","index.js","../node_modules/@babel/runtime/helpers/esm/classCallCheck.js"],"names":["_slicedToArray","arr","i","Array","isArray","_arrayWithHoles","_arr","_n","_d","_e","undefined","_s","_i","Symbol","iterator","next","done","push","value","length","err","_iterableToArrayLimit","TypeError","_nonIterableRest","_defineProperties","target","props","descriptor","enumerable","configurable","writable","Object","defineProperty","key","Voxel","element","_this","this","instance","Constructor","_classCallCheck","updateCamera","current","Date","now","input","camera","map","keypressed","leftright","angle","time","forwardbackward","x","Math","sin","y","cos","updown","height","lookup","horizon","lookdown","mapoffset","floor","width","shift","altitude","resize","screen","_window","window","innerWidth","innerHeight","ctx","getContext","aspect","imagedata","createImageData","bufarray","ArrayBuffer","buf8","Uint8Array","buf32","Uint32Array","getMousePosition","_ref","pageX","pageY","type","_ref$targetTouches","targetTouches","_ref$targetTouches2$","touchX","touchY","startsWith","detectMouseDown","e","mouseposition","getTime","detectMouseUp","detectMouseMove","preventDefault","currentMousePosition","detectKeysDown","_ref2","keyCode","updating","detectKeysUp","_ref3","flip","data","set","hasLoggedImgData","console","log","putImageData","fetchImages","urls","Promise","resolve","_this$map","result","pending","url","index","image","Image","onload","canvas","document","createElement","context","drawImage","getImageData","src","loadMap","_this$map2","_this$map2$urls","colorMapUrl","color","heightMapUrl","then","dataColor","dataHeight","requestAnimationFrame","s","tick","drawVerticalLine","yTop","yBottom","col","_this$width","screenWidth","offset","k","drawVoxels","_this$camera","cameraAngle","cameraDistance","distance","cameraX","cameraY","cameraHeight","cameraHorizon","_this$map3","mapWidth","mapHeight","_this$width2","_this$height","screenHeight","mapWidthPeriod","mapHeightPeriod","sinAngle","cosAngle","hiddenY","Int32Array","deltaZ","z","plX","plY","dx","dy","invZ","mapOffset","heightOnScreen","backgroundcolor","onkeydown","onkeyup","onmousedown","onmouseup","onmousemove","ontouchstart","ontouchend","ontouchmove","protoProps","staticProps","fps","last","delta","sum","reduce","a","c","getFps","font","fillStyle","textAlign","fillText","concat","_this2","drawDebug","prototype","getElementById"],"mappings":"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","file":"static/js/main.90cfb755.chunk.js","sourcesContent":["import arrayWithHoles from \"./arrayWithHoles\";\nimport iterableToArrayLimit from \"./iterableToArrayLimit\";\nimport nonIterableRest from \"./nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");\n}","function _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nexport default function _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}","class Voxel {\n  constructor(element) {\n    this.element = element;\n\n    this.screen = {\n      imagedata: null,\n      bufarray: null, // color data\n      buf8: null, // the same array but with bytes\n      buf32: null, // the same array but with 32-Bit words\n      backgroundcolor: 0xffe09090\n    };\n\n    this.camera = {\n      x: 512, // x position on the map\n      y: 800, // y position on the map\n      height: 78, // height of the camera\n      angle: 0, // direction of the camera\n      horizon: 100, // horizon position (look up and down)\n      distance: 800 // distance of map\n    };\n\n    this.input = {\n      time: Date.now(),\n      forwardbackward: 0,\n      leftright: 0,\n      updown: 0,\n      lookup: false,\n      lookdown: false,\n      mouseposition: null,\n      keypressed: false\n    };\n\n    this.map = {\n      width: 1024,\n      height: 1024,\n      shift: 10, // power of two: 2^10 = 1024\n      altitude: new Uint8Array(1024 * 1024), // 1024 * 1024 byte array with height information\n      color: new Uint32Array(1024 * 1024), // 1024 * 1024 int array with RGB colors,\n      urls: { color: \"./C1W.png\", height: \"./D1.png\" }\n    };\n\n    element.onkeydown = this.detectKeysDown;\n    element.onkeyup = this.detectKeysUp;\n    element.onmousedown = this.detectMouseDown;\n    element.onmouseup = this.detectMouseUp;\n    element.onmousemove = this.detectMouseMove;\n    element.ontouchstart = this.detectMouseDown;\n    element.ontouchend = this.detectMouseUp;\n    element.ontouchmove = this.detectMouseMove;\n\n    this.updating = false;\n\n    this.loadMap();\n  }\n\n  updateCamera = () => {\n    var current = Date.now();\n    const { input, camera, map } = this;\n\n    input.keypressed = false;\n    if (input.leftright != 0) {\n      camera.angle += input.leftright * 0.1 * (current - input.time) * 0.03;\n      input.keypressed = true;\n    }\n    if (input.forwardbackward != 0) {\n      camera.x -=\n        input.forwardbackward *\n        Math.sin(camera.angle) *\n        (current - input.time) *\n        0.03;\n      camera.y -=\n        input.forwardbackward *\n        Math.cos(camera.angle) *\n        (current - input.time) *\n        0.03;\n      input.keypressed = true;\n    }\n    if (input.updown != 0) {\n      camera.height += input.updown * (current - input.time) * 0.03;\n      input.keypressed = true;\n    }\n    if (input.lookup) {\n      camera.horizon += 2 * (current - input.time) * 0.03;\n      input.keypressed = true;\n    }\n    if (input.lookdown) {\n      camera.horizon -= 2 * (current - input.time) * 0.03;\n      input.keypressed = true;\n    }\n\n    // Collision detection. Don't fly below the surface.\n    var mapoffset =\n      (((Math.floor(camera.y) & (map.width - 1)) << map.shift) +\n        (Math.floor(camera.x) & (map.height - 1))) |\n      0;\n    if (map.altitude[mapoffset] + 10 > camera.height)\n      camera.height = map.altitude[mapoffset] + 10;\n\n    input.time = current;\n  };\n\n  resize = () => {\n    const { element, screen } = this;\n    const { innerWidth, innerHeight } = window;\n\n    const ctx = element.getContext(\"2d\");\n    const aspect = innerWidth / innerHeight;\n\n    this.width = innerWidth < 800 ? innerWidth : 800;\n    this.height = Math.floor(element.width / aspect);\n\n    const { width, height } = this;\n\n    element.width = width;\n    element.height = height;\n\n    screen.imagedata = ctx.createImageData(width < 800 ? width : 800, height);\n    screen.bufarray = new ArrayBuffer(\n      screen.imagedata.width * screen.imagedata.height * 4\n    );\n    screen.buf8 = new Uint8Array(screen.bufarray);\n    screen.buf32 = new Uint32Array(screen.bufarray);\n  };\n\n  getMousePosition = ({\n    pageX,\n    pageY,\n    type,\n    targetTouches: [{ pageX: touchX, pageY: touchY } = {}] = []\n  }) => {\n    let result;\n\n    // fix for Chrome\n    if (type.startsWith(\"touch\")) {\n      result = [touchX, touchY];\n    } else {\n      result = [pageX, pageY];\n    }\n\n    return result;\n  };\n\n  detectMouseDown = e => {\n    const { input } = this;\n\n    input.forwardbackward = 3;\n    input.mouseposition = this.getMousePosition(e);\n    input.time = new Date().getTime();\n\n    // if (!this.updating) window.requestAnimationFrame(s => this.tick(s));\n  };\n\n  detectMouseUp = () => {\n    const { input } = this;\n\n    input.mouseposition = null;\n    input.forwardbackward = 0;\n    input.leftright = 0;\n    input.updown = 0;\n  };\n\n  detectMouseMove = e => {\n    e.preventDefault();\n\n    const { input, camera } = this;\n\n    if (input.mouseposition == null) return;\n    if (input.forwardbackward == 0) return;\n\n    var currentMousePosition = this.getMousePosition(e);\n\n    input.leftright =\n      ((input.mouseposition[0] - currentMousePosition[0]) / window.innerWidth) *\n      2;\n\n    camera.horizon =\n      100 +\n      ((input.mouseposition[1] - currentMousePosition[1]) /\n        window.innerHeight) *\n        500;\n\n    input.updown =\n      ((input.mouseposition[1] - currentMousePosition[1]) /\n        window.innerHeight) *\n      10;\n  };\n\n  detectKeysDown = ({ keyCode }) => {\n    const { input, updating } = this;\n\n    switch (keyCode) {\n      case 37: // left cursor\n      case 65: // a\n        input.leftright = +1;\n        break;\n      case 39: // right cursor\n      case 68: // d\n        input.leftright = -1;\n        break;\n      case 38: // cursor up\n      case 87: // w\n        input.forwardbackward = 3;\n        break;\n      case 40: // cursor down\n      case 83: // s\n        input.forwardbackward = -3;\n        break;\n      case 82: // r\n        input.updown = +2;\n        break;\n      case 70: // f\n        input.updown = -2;\n        break;\n      case 69: // e\n        input.lookup = true;\n        break;\n      case 81: //q\n        input.lookdown = true;\n        break;\n      default:\n        return;\n        break;\n    }\n\n    if (!updating) {\n      input.time = new Date().getTime();\n      // window.requestAnimationFrame(s => this.tick(s));\n    }\n\n    return false;\n  };\n\n  detectKeysUp = ({ keyCode }) => {\n    const { input } = this;\n\n    switch (keyCode) {\n      case 37: // left cursor\n      case 65: // a\n        input.leftright = 0;\n        break;\n      case 39: // right cursor\n      case 68: // d\n        input.leftright = 0;\n        break;\n      case 38: // cursor up\n      case 87: // w\n        input.forwardbackward = 0;\n        break;\n      case 40: // cursor down\n      case 83: // s\n        input.forwardbackward = 0;\n        break;\n      case 82: // r\n        input.updown = 0;\n        break;\n      case 70: // f\n        input.updown = 0;\n        break;\n      case 69: // e\n        input.lookup = false;\n        break;\n      case 81: //q\n        input.lookdown = false;\n        break;\n      default:\n        return;\n        break;\n    }\n\n    return false;\n  };\n\n  flip = () => {\n    const { element, screen } = this;\n    const ctx = element.getContext(\"2d\");\n\n    screen.imagedata.data.set(screen.buf8);\n\n    if (!this.hasLoggedImgData) {\n      console.log(screen.imagedata);\n      this.hasLoggedImgData = true;\n    }\n\n    ctx.putImageData(screen.imagedata, 0, 0);\n  };\n\n  getFps() {\n    let fps = 0;\n\n    if (!!this.last) {\n      const delta = (Date.now() - this.last) / 1000;\n      this.last = Date.now();\n      fps = 1 / delta;\n    } else {\n      this.last = Date.now();\n    }\n\n    if (!!this.fps && !!this.fps.length) {\n      this.fps.push(fps);\n      if (100 < this.fps.length) {\n        this.fps.shift();\n      }\n    } else {\n      this.fps = [fps];\n    }\n\n    let reducer = (a, c) => a + c;\n    let sum = this.fps.reduce(reducer);\n    let avg = Math.floor(sum / this.fps.length);\n\n    return avg;\n  }\n\n  drawDebug(s) {\n    const { element, width, height } = this;\n    const ctx = element.getContext(\"2d\");\n    const fps = this.getFps();\n\n    ctx.font = \"24px courier new\";\n    ctx.fillStyle = \"black\";\n    ctx.textAlign = \"left\";\n    ctx.fillText(`${width}x${height}@${fps}`, 36, 52);\n  }\n\n  tick(s) {\n    this.updating = true;\n    this.resize();\n    this.updateCamera();\n    this.drawVoxels();\n    this.flip();\n    this.drawDebug(s);\n\n    if (!this.input.keypressed) {\n      this.updating = false;\n    }\n    // } else {\n      window.requestAnimationFrame(s => this.tick(s));\n    // }\n  }\n\n  fetchImages = urls =>\n    new Promise(resolve => {\n      const {\n        map: { width, height }\n      } = this;\n      const result = [];\n\n      let pending = urls.length;\n\n      if (0 === pending) {\n        resolve([]);\n        return;\n      }\n\n      urls.map((url, index) => {\n        const image = new Image();\n\n        image.onload = () => {\n          const canvas = document.createElement(\"canvas\");\n          const context = canvas.getContext(\"2d\");\n\n          canvas.width = width;\n          canvas.height = height;\n          context.drawImage(image, 0, 0, width, height);\n\n          result[index] = context.getImageData(0, 0, width, height).data;\n          pending--;\n\n          if (0 >= pending) resolve(result);\n        };\n\n        image.src = url;\n      });\n    });\n\n  loadMap = () => {\n    const {\n      map,\n      map: {\n        urls: { color: colorMapUrl, height: heightMapUrl },\n        width,\n        height\n      }\n    } = this;\n\n    this.fetchImages([colorMapUrl, heightMapUrl]).then(result => {\n      const dataColor = result[0];\n      const dataHeight = result[1];\n\n      for (let i = 0; i < width * height; i++) {\n        map.color[i] =\n          0xff000000 |\n          (dataColor[(i << 2) + 2] << 16) |\n          (dataColor[(i << 2) + 1] << 8) |\n          dataColor[(i << 2) + 0];\n\n        map.altitude[i] = dataHeight[i << 2];\n      }\n\n      this.resize();\n      window.requestAnimationFrame(s => this.tick(s));\n      window.resize = this.resize;\n    });\n  };\n\n  drawVerticalLine = (x, yTop, yBottom, col) => {\n    const {\n      width: screenWidth = 0,\n      screen: { buf32 }\n    } = this;\n\n    x = x | 0;\n    yTop = yTop | 0;\n    yBottom = yBottom | 0;\n    col = col | 0;\n\n    if (yTop < 0) yTop = 0;\n    if (yTop > yBottom) return;\n\n    // get offset on screen for the vertical line\n    var offset = (yTop * screenWidth + x) | 0;\n\n    for (var k = yTop | 0; (k < yBottom) | 0; k = (k + 1) | 0) {\n      buf32[offset | 0] = col | 0;\n      offset = (offset + screenWidth) | 0;\n    }\n  };\n\n  drawVoxels = () => {\n    const {\n      camera: {\n        angle: cameraAngle,\n        distance: cameraDistance,\n        x: cameraX,\n        y: cameraY,\n        height: cameraHeight,\n        horizon: cameraHorizon\n      },\n      map: { width: mapWidth, height: mapHeight, shift, altitude, color },\n      width: screenWidth = 0,\n      height: screenHeight = 0\n    } = this;\n\n    const mapWidthPeriod = mapWidth - 1;\n    const mapHeightPeriod = mapHeight - 1;\n    const sinAngle = Math.sin(cameraAngle);\n    const cosAngle = Math.cos(cameraAngle);\n    const hiddenY = new Int32Array(screenWidth);\n\n    for (let i = 0; i < screenWidth; i = (i + 1) | 0) {\n      hiddenY[i] = screenHeight;\n    }\n\n    var deltaZ = 1;\n\n    // Draw from front to back\n    for (var z = 1; z < cameraDistance; z += deltaZ) {\n      // 90 degree field of view\n      let plX = -cosAngle * z - sinAngle * z;\n      let plY = sinAngle * z - cosAngle * z;\n      const prX = cosAngle * z - sinAngle * z;\n      const prY = -sinAngle * z - cosAngle * z;\n      const dx = (prX - plX) / screenWidth;\n      const dy = (prY - plY) / screenWidth;\n\n      plX += cameraX;\n      plY += cameraY;\n\n      const invZ = (1 / z) * 240;\n\n      for (let i = 0; (i < screenWidth) | 0; i = (i + 1) | 0) {\n        const mapOffset =\n          (((Math.floor(plY) & mapWidthPeriod) << shift) +\n            (Math.floor(plX) & mapHeightPeriod)) |\n          0;\n\n        var heightOnScreen =\n          ((cameraHeight - altitude[mapOffset]) * invZ + cameraHorizon) | 0;\n\n        this.drawVerticalLine(i, heightOnScreen, hiddenY[i], color[mapOffset]);\n\n        if (heightOnScreen < hiddenY[i]) hiddenY[i] = heightOnScreen;\n\n        plX += dx;\n        plY += dy;\n      }\n      deltaZ += 0.005;\n    }\n  };\n}\n\nnew Voxel(document.getElementById(\"voxel\"));\n","export default function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}"],"sourceRoot":""}